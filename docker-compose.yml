version: "3"

services:
  nextjs:
    image: corliansa/corliansa:latest
    container_name: nextjs
    restart: always
  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    restart: always
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 5000:3000/tcp
      - 853:853/tcp
      - 853:853/udp
    volumes:
      - ./adguard/conf/:/opt/adguardhome/conf/:rw
      - ./adguard/work/:/opt/adguardhome/work/:rw
      - ./letsencrypt/certs/:/certs/:ro
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    command: "--sslcert /certs/portainer.corliansa.xyz/certificate.crt --sslkey /certs/portainer.corliansa.xyz/privatekey.key"
    volumes:
      - ./portainer/data/:/data/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt/certs/:/certs/:ro
  coolify:
    image: coollabsio/coolify:latest
    restart: always
    container_name: coolify
    ports:
      - 3000:3000
    volumes:
      - ./coolify/backups/:/app/backups/:rw
      - ./coolify/db/:/app/db/:rw
      - ./coolify/logs/:/app/logs/:rw
      - ./coolify/ssl/:/app/ssl/:rw
      - ./letsencrypt/acme/:/etc/traefik/acme/:rw
      - ./letsencrypt/certs/:/etc/letsencrypt/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - COOLIFY_APP_ID
      - COOLIFY_SECRET_KEY
      - COOLIFY_DATABASE_URL=file:../db/prod.db
      - COOLIFY_IS_ON=docker
      - COOLIFY_WHITE_LABELED=false
      - COOLIFY_WHITE_LABELED_ICON=
      - COOLIFY_AUTO_UPDATE=false
  fluent-bit:
    image: coollabsio/coolify-fluent-bit:1.0.0
    container_name: coolify-fluentbit
    volumes:
      - ./coolify/logs/:/app/logs/:rw
  replacer:
    image: corliansa/ext-replacer:latest
    container_name: replacer
    restart: always
    volumes:
      - ./replacer/data/:/usr/app/data/:ro
      - /bin/tailscale:/bin/tailscale:ro
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock:ro
    environment:
      - HTTP_PATH=http://coolify:3000/webhooks/traefik/main.json
  coolify-proxy:
    image: traefik:latest
    container_name: coolify-proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./letsencrypt/acme/:/etc/traefik/acme/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --accesslog=true
      - --log.level=DEBUG
      - --api.dashboard=true
      - --serversTransport.insecureSkipVerify=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.forwardedHeaders.insecure=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.forwardedHeaders.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.http.endpoint=http://replacer:8080
      - --providers.http.pollTimeout=5s
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    networks:
      - default
      - coolify
  certs-dumper:
    image: ldez/traefik-certs-dumper:latest
    container_name: certs-dumper
    volumes:
      - ./letsencrypt/certs/:/certs/:rw
      - ./letsencrypt/acme/:/acme/:ro
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /acme/acme.json ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch --source /acme/acme.json --dest /certs --domain-subdir=true'
  watchtower:
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
  coolify:
    external: true
    name: coolify
