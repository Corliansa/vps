version: "3"

services:
  nextjs:
    build: ./corliansa
    restart: unless-stopped
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    # uncomment after first certificate is generated
    # command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
  certbot:
    image: certbot/certbot:latest
    # uncomment after first certificate is generated
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  minio:
    image: bitnami/minio:latest
    restart: unless-stopped
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio/data/:/data/:rw
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
  adguard:
    image: adguard/adguardhome:latest
    restart: always
    # network_mode: host
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 68:68/udp
      - 853:853/tcp
      - 853:853/udp
      - 3000:3000/tcp
      - 3030:3030/tcp
      - 784:784/udp
      - 8853:8853/udp
      - 5443:5443/tcp
      - 5443:5443/udp
    volumes:
      - ./adguard/conf/:/opt/adguardhome/conf/:rw
      - ./adguard/work/:/opt/adguardhome/work/:rw
      - ./certbot/conf/:/etc/letsencrypt/:ro
### Currently running tailscale on the host machine, but this is how you would run it in a container
# Remember to use ephemeral and reusable key!
#
# tailscale:
#   image: 'tailscale/tailscale:latest'
#   restart: always
#   volumes:
#     - '/var/lib/:/var/lib/:rw'
#     - '/dev/net/tun/:/dev/net/tun/:rw'
#   environment:
#     - TS_AUTH_KEY
#     - TS_EXTRA_ARGS=--advertise-exit-node
#   privileged: true
#   cap_add:
#     - NET_ADMIN
#     - NET_RAW
#   network_mode: "host"
